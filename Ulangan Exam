const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");

const app = express();


/*-------------------------Implementasi body-parser-------------------------*/
// penggunaan body-parser untuk ekstrak data request berformat JSON
app.use(bodyParser.json())

// penggunaan body-parser untuk ekstrak data request dari body
app.use(bodyParser.urlencoded({ extended: true }))


/*-------------------------Implementasi cors-------------------------*/
// penggunaan cors agar end point dapat diakses oleh cross platform
app.use(cors())

// Codingan disini


app.get("/convert/mm/:panjang",(req, res) => {
    let mm = parseFloat(req.params.panjang);
    let cm = mm / 10;
    let dm = mm / 100;
    let m = mm / 1000;
    let dam = mm / 10000;
    let hm = mm / 100000;
    let km = mm / 1000000;

    let response = {
        mm : mm,
        cm : cm,
        dm : dm,
        m : m,
        dam : dam,
        hm : hm,
        km : km,
    };
    res.json(response);
})

app.get("/convert/cm/:panjang",(req, res) => {
    let cm = parseFloat(req.params.panjang);
    let mm = cm * 10;
    let dm = cm / 100;
    let m = cm / 1000;
    let dam = cm / 10000;
    let hm = cm / 100000;
    let km = cm / 1000000;

    let response = {
        mm : mm,
        cm : cm,
        dm : dm,
        m : m,
        dam : dam,
        hm : hm,
        km : km,
    };
    res.json(response);
})

app.get("/convert/dm/:panjang",(req, res) => {
    let dm = parseFloat(req.params.panjang);
    let mm = dm * 100;
    let cm = dm * 10;
    let m = dm / 10;
    let dam = dm / 100;
    let hm = dm / 1000;
    let km = dm / 10000;

    let response = {
        mm : mm,
        cm : cm,
        dm : dm,
        m : m,
        dam : dam,
        hm : hm,
        km : km,
    };
    res.json(response);
})

app.get("/convert/m/:panjang",(req, res) => {
    let m = parseFloat(req.params.panjang);
    let mm = m * 1000;
    let cm = m * 100;
    let dm = m * 10;
    let dam = m / 10;
    let hm = m / 100;
    let km = m / 1000;

    let response = {
        mm : mm,
        cm : cm,
        dm : dm,
        m : m,
        dam : dam,
        hm : hm,
        km : km,
    };
    res.json(response);
})

app.get("/convert/dam/:panjang",(req, res) => {
    let dam = parseFloat(req.params.panjang);
    let mm = dam * 10000;
    let cm = dam * 1000;
    let dm = dam * 100;
    let m = dam * 10;
    let hm = dam / 10;
    let km = dam / 100;

    let response = {
        mm : mm,
        cm : cm,
        dm : dm,
        m : m,
        dam : dam,
        hm : hm,
        km : km,
    };
    res.json(response);
})

app.get("/convert/hm/:panjang",(req, res) => {
    let hm = parseFloat(req.params.panjang);
    let mm = hm * 10000;
    let cm = hm * 1000;
    let dm = hm * 1000;
    let m = hm * 100;
    let dam = hm * 10;
    let km = hm / 10;

    let response = {
        mm : mm,
        cm : cm,
        dm : dm,
        m : m,
        dam : dam,
        hm : hm,
        km : km,
    };
    res.json(response);
})
app.get("/convert/km/:panjang",(req, res) => {
    let km = parseFloat(req.params.panjang);
    let mm = km * 1000000;
    let cm = km * 100000;
    let dm = km * 10000;
    let m = km * 1000;
    let dam = km * 100;
    let hm = km * 10;

    let response = {
        mm : mm,
        cm : cm,
        dm : dm,
        m : m,
        dam : dam,
        hm : hm,
        km : km,
    };
    res.json(response);
})

app.post("/f",(req, res) => {
    let m = Number(req.body.m);
    let a = Number(req.body.a); 
    let f = m * a 
    



    let response = {
        f : f,
       m : m,
       a : a

        
    };
    res.json(response);

})

app.post("/m",(req, res) => {
    let f = Number(req.body.f);
    let a = Number(req.body.a); 
    let m = f / a 

    



    let response = {
        f : f,
       m : m,
       a : a
    
        
    };
    res.json(response);

})

app.post("/a",(req, res) => {
    let m = Number(req.body.m);
    let f = Number(req.body.f); 
    let a = f / m

    



    let response = {
        f : f,
       m : m,
       a : a
    
        
    };
    res.json(response);

})



app.post("/berat", (req,res) => 
{
    let tipe_berat = req.body.tipe_berat
    let berat = Number(req.body.berat)
    let hold =0
    let response
    let kg,hg,dag,g,dg,cg,mg

    if (tipe_berat === "mg") 
    {
        mg = berat
        cg = mg * 10
        dg = cg * 10
        g = dg * 10
        dag = g * 10
        hg = dag * 10
        kg = hg * 10
        response = {
            Soal: "Konversi MG",
            mg: mg,
            cg: cg,
            dg: dg,
            g: g,
            dag: dag,
            hg: hg,
            kg: kg
        }
    }
    else if(tipe_berat === "cg")
    {
        mg = berat / 10
        cg = mg * 10
        dg = cg * 10
        g = dg * 10
        dag = g * 10
        hg = dag * 10
        kg = hg * 10
        response = {
            Soal: "Konversi CG",
            mg: mg,
            cg: cg,
            dg: dg,
            g: g,
            dag: dag,
            hg: hg,
            kg: kg
        }
    }
    else if(tipe_berat === "dg")
    {
        mg = berat / 100
        cg = mg * 10
        dg = cg * 10
        g = dg * 10
        dag = g * 10
        hg = dag * 10
        kg = hg * 10
        response = {
            Soal: "Konversi DG",
            mg: mg,
            cg: cg,
            dg: dg,
            g: g,
            dag: dag,
            hg: hg,
            kg: kg
        }
    }
    else if(tipe_berat === "g")
    {
        mg = berat / 1000
        cg = mg * 10
        dg = cg * 10
        g = dg * 10
        dag = g * 10
        hg = dag * 10
        kg = hg * 10
        response = {
            Soal: "Konversi G",
            mg: mg,
            cg: cg,
            dg: dg,
            g: g,
            dag: dag,
            hg: hg,
            kg: kg
        }
    }
    else if(tipe_berat === "dag")
    {
        mg = berat / 10000
        cg = mg * 10
        dg = cg * 10
        g = dg * 10
        dag = g * 10
        hg = dag * 10
        kg = hg * 10
        response = {
            Soal: "Konversi DAG",
            mg: mg,
            cg: cg,
            dg: dg,
            g: g,
            dag: dag,
            hg: hg,
            kg: kg
        }
    }
    else if(tipe_berat === "hg")
    {
        mg = berat / 100000
        cg = mg * 10
        dg = cg * 10
        g = dg * 10
        dag = g * 10
        hg = dag * 10
        kg = hg * 10
        response = {
            Soal: "Konversi HG",
            mg: mg,
            cg: cg,
            dg: dg,
            g: g,
            dag: dag,
            hg: hg,
            kg: kg
        }
    }
    else if(tipe_berat === "kg")
    {
        mg = berat / 1000000
        cg = mg * 10
        dg = cg * 10
        g = dg * 10
        dag = g * 10
        hg = dag * 10
        kg = hg * 10
        response = {
            Soal: "Konversi KG",
            mg: mg,
            cg: cg,
            dg: dg,
            g: g,
            dag: dag,
            hg: hg,
            kg: kg
        }
    }

    res.json(response)
})


app.get("/vst/:type/:diket1/:diket2", (req,res) => 
{
    let soal = req.params.type
    let var1 = Number(req.params.diket1)
    let var2 = Number(req.params.diket2)
    let hasil = 0
    let response

    if (soal === "v") 
    {
        hasil = var1/var2
        response = {
            Soal: "Mencari kecepatan(Velocity) per detik",
            Jarak: var1 + ' meter',
            Waktu: var2 + ' detik',
            Hasil: hasil + ' m/detik',
        }
    }
    else if(soal === "s")
    {
        hasil = var1*var2
        response = {
            Soal: "Mencari Jarak(Space)",
            Kecepatan: var1 + ' m/detik',
            Waktu: var2 + ' detik',
            Hasil: hasil + ' meter',
        }
    }
    else if(soal === "t")
    {
        hasil = var1/var2
        response = {
            Soal: "Mencari Waktu(Time)",
            Jarak: var1 +' Meter',
            Kecepatan: var2 + ' m/detik',
            Hasil: hasil.toFixed(2) + ' detik',
        }
    }
    else
    {
        response = "Tipe tidak ada!\n<br>Coba salah satu dari berikut Tipe:[v,s,t]"
    }

    res.json(response)
})


// Codingan disini

const portt = 8000
app.listen(portt, () => 
{
    console.log("Server run on port \""+portt+'\"');
})
